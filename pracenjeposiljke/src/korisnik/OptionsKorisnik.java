/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package korisnik;

import controller.Controller;
import domain.Korisnik;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.stream.Collectors;
import javax.swing.JOptionPane;
import session.LocalStorage;
import tableModels.KorisnikTableModel;

/**
 *
 * @author Vuk
 */
public class OptionsKorisnik extends javax.swing.JDialog {

    /**
     * Creates new form UpdateKorisnik
     */
    private LocalStorage localStorage = LocalStorage.getInstance();
    public OptionsKorisnik(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblAllKorisnik = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtSearchCriteria = new javax.swing.JTextField();
        btnCreateKorisnik = new javax.swing.JButton();
        btnUpdateKorisnik = new javax.swing.JButton();
        btnDeleteKorisnik = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tblAllKorisnik.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        tblAllKorisnik.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblAllKorisnik);

        jLabel1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel1.setText("Pretraga korisnika po JMBG");

        txtSearchCriteria.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtSearchCriteria.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSearchCriteriaKeyPressed(evt);
            }
        });

        btnCreateKorisnik.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnCreateKorisnik.setText("Kreiraj korisnika");
        btnCreateKorisnik.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateKorisnikActionPerformed(evt);
            }
        });

        btnUpdateKorisnik.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnUpdateKorisnik.setText("Ažuriraj korisnika");
        btnUpdateKorisnik.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateKorisnikActionPerformed(evt);
            }
        });

        btnDeleteKorisnik.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnDeleteKorisnik.setText("Izbriši korisnika");
        btnDeleteKorisnik.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteKorisnikActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(btnCreateKorisnik, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnUpdateKorisnik, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnDeleteKorisnik, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(txtSearchCriteria))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 465, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtSearchCriteria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCreateKorisnik)
                    .addComponent(btnUpdateKorisnik)
                    .addComponent(btnDeleteKorisnik))
                .addContainerGap(68, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateKorisnikActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateKorisnikActionPerformed
        // TODO add your handling code here:
        localStorage.addItemsInHashMap("operation", "CREATE");
        SaveKorisnik sk = new SaveKorisnik(null, true);
        sk.setLocationRelativeTo(null);
        sk.setVisible(true);
        localStorage.removeItemFromHashMap("operation");
        populateTable();
    }//GEN-LAST:event_btnCreateKorisnikActionPerformed

    private void txtSearchCriteriaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchCriteriaKeyPressed
        // TODO add your handling code here:
        KorisnikTableModel korisnikTableModel = (KorisnikTableModel)tblAllKorisnik.getModel();
        List<Korisnik> korisnici = korisnikTableModel.getKorisnici();
        
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if(!txtSearchCriteria.getText().isEmpty()){
                List<Korisnik> searchKorisnik = korisnici.stream()
                                                .filter(korisnik->korisnik.getJmbg().equals(txtSearchCriteria.getText().trim()))
                                                .collect(Collectors.toList());
                tblAllKorisnik.setModel(new KorisnikTableModel(searchKorisnik));
            }else{
                populateTable();
            }
        }
    }//GEN-LAST:event_txtSearchCriteriaKeyPressed

    private void btnUpdateKorisnikActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateKorisnikActionPerformed
        // TODO add your handling code here:
        localStorage.addItemsInHashMap("operation", "UPDATE");
        Korisnik korisnik = getSelectedKorisnik();
        if(korisnik!=null){
            localStorage.addItemsInHashMap("korisnik", korisnik);
            SaveKorisnik sk = new SaveKorisnik(null, true);
            sk.setLocationRelativeTo(null);
            sk.setVisible(true);
        }
        localStorage.removeItemFromHashMap("operation");
        localStorage.removeItemFromHashMap("korisnik");
        populateTable();
    }//GEN-LAST:event_btnUpdateKorisnikActionPerformed

    private void btnDeleteKorisnikActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteKorisnikActionPerformed
        // TODO add your handling code here:
        Korisnik korisnik = getSelectedKorisnik();
        if(korisnik!=null){
            try {
                Controller.getInstance().deleteKorisnik(korisnik);
                JOptionPane.showMessageDialog(this, "Uspesno ste izbrisali korisnika");
                populateTable();
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Korisnik je u relaciji sa drugim tabelama", "Exception", JOptionPane.PLAIN_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnDeleteKorisnikActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreateKorisnik;
    private javax.swing.JButton btnDeleteKorisnik;
    private javax.swing.JButton btnUpdateKorisnik;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblAllKorisnik;
    private javax.swing.JTextField txtSearchCriteria;
    // End of variables declaration//GEN-END:variables

    private void setComponents() {
        populateTable();
    }

    private void populateTable() {
        try {
            tblAllKorisnik.setModel(new KorisnikTableModel(Controller.getInstance().getKorisnici(new Korisnik())));
        } catch (Exception ex) {
            Logger.getLogger(OptionsKorisnik.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private Korisnik getSelectedKorisnik() {
        int selectedRow = tblAllKorisnik.getSelectedRow();
        if(selectedRow == -1){
            JOptionPane.showMessageDialog(this, "Niste izabrali korisnika");
            return null;
        }else{
            List<Korisnik> korisnici = ((KorisnikTableModel) tblAllKorisnik.getModel()).getKorisnici();
            return korisnici.get(selectedRow);
        }
    }
}
