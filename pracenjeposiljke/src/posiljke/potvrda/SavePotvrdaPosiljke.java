/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package posiljke.potvrda;

import controller.Controller;
import domain.Adresnica;
import domain.PotvrdaOPrijemuPosiljke;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import session.LocalStorage;

/**
 *
 * @author Vuk
 */
public class SavePotvrdaPosiljke extends javax.swing.JDialog {

    /**
     * Creates new form SavePotvrdaPosiljke
     */
    private final LocalStorage localStorage = LocalStorage.getInstance();
    private List<Adresnica> posiljke;
    private PotvrdaOPrijemuPosiljke potvrda;
    private final String operation;
    
    public SavePotvrdaPosiljke(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        operation = (String) localStorage.getItemFromHashMap("operation");
        setComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtPrijemniBroj = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        calendarStampa = new com.toedter.calendar.JCalendar();
        jLabel4 = new javax.swing.JLabel();
        cbHour = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        cbMinutes = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        cbPosiljke = new javax.swing.JComboBox<>();
        btnSave = new javax.swing.JButton();
        btnClearForm = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        cbSeconds = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Arial", 3, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Podaci o potvrdi prijema pošiljke");

        jLabel2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel2.setText("Prijemni broj");

        txtPrijemniBroj.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel3.setText("Datum štampe");

        jLabel4.setText("Vreme štampe");

        cbHour.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        cbHour.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23" }));

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText(":");

        cbMinutes.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        cbMinutes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));

        jLabel6.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel6.setText("Šifra pošiljke");

        cbPosiljke.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        btnSave.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnSave.setText("Sačuvaj");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnClearForm.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnClearForm.setText("Očisti polja");
        btnClearForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearFormActionPerformed(evt);
            }
        });

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText(":");

        cbSeconds.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        cbSeconds.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtPrijemniBroj, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(calendarStampa, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(cbPosiljke, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addComponent(cbHour, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(cbMinutes, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cbSeconds, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnClearForm, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtPrijemniBroj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(calendarStampa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cbHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(cbMinutes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(cbSeconds, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cbPosiljke, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClearForm, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnClearFormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearFormActionPerformed
        // TODO add your handling code here:
        txtPrijemniBroj.setText("");
        cbHour.setSelectedIndex(0);
        cbMinutes.setSelectedIndex(0);
        cbSeconds.setSelectedIndex(0);
        calendarStampa.setDate(new Date());
    }//GEN-LAST:event_btnClearFormActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        potvrda = getInputDataPotvrda();
        try{
            if(operation.equals("CREATE")){
                Controller.getInstance().addPotvrdaOPrijemuPosiljke(potvrda);
                JOptionPane.showMessageDialog(this, "Upesno kreirana potvrda o prijemu pošiljke");
                this.dispose();
            }else if(operation.equals("UPDATE")){
                Controller.getInstance().updatePotvrdaPosiljke(potvrda);
                JOptionPane.showMessageDialog(this, "Upesno ažurirana potvrda o prijemu pošiljke");
                this.dispose();
            }
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Exception", JOptionPane.PLAIN_MESSAGE);
        }
    }//GEN-LAST:event_btnSaveActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClearForm;
    private javax.swing.JButton btnSave;
    private com.toedter.calendar.JCalendar calendarStampa;
    private javax.swing.JComboBox<String> cbHour;
    private javax.swing.JComboBox<String> cbMinutes;
    private javax.swing.JComboBox<Adresnica> cbPosiljke;
    private javax.swing.JComboBox<String> cbSeconds;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField txtPrijemniBroj;
    // End of variables declaration//GEN-END:variables

    private void setComponents() {
        if(operation.equals("CREATE")){
            Adresnica posiljka = (Adresnica) localStorage.getItemFromHashMap("posiljka");
            cbPosiljke.addItem(posiljka);
            txtPrijemniBroj.setEditable(true);
        }
        else if(operation.equals("UPDATE")){
            posiljke = (List<Adresnica>) localStorage.getItemFromHashMap("posiljke");
            potvrda = (PotvrdaOPrijemuPosiljke) localStorage.getItemFromHashMap("potvrdaPosiljke");
            cbPosiljke.setModel(new DefaultComboBoxModel(posiljke.toArray()));
            txtPrijemniBroj.setEditable(false);
            populateForm();
        }
    }

    private void populateForm() {
        txtPrijemniBroj.setText(potvrda.getPrijemniBroj().toString());
        calendarStampa.setDate(Date.from(potvrda.getDatumStampe().atStartOfDay(ZoneId.systemDefault()).toInstant()));
        LocalDateTime vremeStampe = potvrda.getVremeStampe();
        int hours = vremeStampe.getHour();
        int minutes = vremeStampe.getMinute();
        int seconds = vremeStampe.getSecond();
        cbHour.setSelectedItem(String.format("%02d", hours));
        cbMinutes.setSelectedItem(String.format("%02d", minutes));
        cbSeconds.setSelectedItem(String.format("%02d", seconds));
        cbPosiljke.setSelectedItem(potvrda.getPosiljka());
    }

    private PotvrdaOPrijemuPosiljke getInputDataPotvrda() {
        Integer prijemniBroj = Integer.parseInt(txtPrijemniBroj.getText());
        LocalDate datumStampe = calendarStampa.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        Integer sati = Integer.parseInt((String)cbHour.getSelectedItem());
        Integer minuti = Integer.parseInt((String)cbMinutes.getSelectedItem());
        Integer sekunde = Integer.parseInt((String)cbSeconds.getSelectedItem());
        LocalDateTime vremeStampe = LocalDateTime.of(datumStampe.getYear(),datumStampe.getMonth().getValue(),datumStampe.getDayOfMonth(), sati, minuti, sekunde);
        Adresnica adresnica = (Adresnica) cbPosiljke.getSelectedItem();
        
        return new PotvrdaOPrijemuPosiljke(prijemniBroj,datumStampe,vremeStampe,adresnica,adresnica.getPrimalac(),adresnica.getPosiljalac());
    }
}
