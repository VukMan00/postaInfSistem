/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package dostavljanjeposiljke;

import controller.Controller;
import domain.DostavljanjePosiljke;
import domain.DostavniSpisak;
import domain.TipPartition;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import session.LocalStorage;
import tableModels.DostavljanePosiljkeTableModel;

/**
 *
 * @author Vuk
 */
public class PosiljkePoKvartalu extends javax.swing.JDialog {

    /**
     * Creates new form PosiljkePoKvartalu
     */
    private LocalStorage localStorage = LocalStorage.getInstance();
    private List<DostavljanjePosiljke> dostavljanePosiljke;
    private List<DostavljanjePosiljke> dostavljanePosiljkePrvi;
    private List<DostavljanjePosiljke> dostavljanePosiljkeDrugi;
    private List<DostavljanjePosiljke> dostavljanePosiljkeTreci;
    private List<DostavljanjePosiljke> dostavljanePosiljkeCetvrti;
    
    public PosiljkePoKvartalu(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        dostavljanePosiljke = new ArrayList<>();
        dostavljanePosiljkePrvi = new ArrayList<>();
        dostavljanePosiljkeDrugi = new ArrayList<>();
        dostavljanePosiljkeTreci = new ArrayList<>();
        dostavljanePosiljkeCetvrti = new ArrayList<>();
        setComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cbCriteriaQuater = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDostavljanePosiljke = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        txtBrojPosiljki = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel1.setText("Kvartali:");

        cbCriteriaQuater.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        cbCriteriaQuater.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "/", "Januar Februar Mart", "April Maj Jun", "Jul Avgust Septembar", "Oktobar Novembar Decembar" }));
        cbCriteriaQuater.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCriteriaQuaterActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel2.setText("Isporučene pošiljke");

        tblDostavljanePosiljke.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblDostavljanePosiljke);

        jLabel3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel3.setText("Ukupno isporučenih pošiljki");

        txtBrojPosiljki.setEditable(false);
        txtBrojPosiljki.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbCriteriaQuater, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtBrojPosiljki, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 112, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cbCriteriaQuater, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtBrojPosiljki, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbCriteriaQuaterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCriteriaQuaterActionPerformed
        // TODO add your handling code here:
        String criteria = (String) cbCriteriaQuater.getSelectedItem();
        switch(criteria){
            case "/" -> populateTable();
            case "Januar Februar Mart" -> populateTableFirstQuater();
            case "April Maj Jun" -> populateTableSecondQuater();
            case "Jul Avgust Septembar" -> populateTableThirdQuater();
            case "Oktobar Novembar Decembar" -> populateTableFourthQuater();
        }
    }//GEN-LAST:event_cbCriteriaQuaterActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbCriteriaQuater;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblDostavljanePosiljke;
    private javax.swing.JTextField txtBrojPosiljki;
    // End of variables declaration//GEN-END:variables

    private void setComponents() {
        try {
            dostavljanePosiljke = Controller.getInstance().getPrimljenePosiljke(new DostavljanjePosiljke());
            populateTable();
        } catch (Exception ex) {
            Logger.getLogger(PosiljkePoKvartalu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void populateTable() {
        tblDostavljanePosiljke.setModel(new DostavljanePosiljkeTableModel(dostavljanePosiljke));
        txtBrojPosiljki.setText("" + dostavljanePosiljke.size());
    }

    private void populateTableFirstQuater() {
        try {
            DostavljanjePosiljke dp = new DostavljanjePosiljke();
            dp.setKvartal(TipPartition.januar_februar_mart);
            dostavljanePosiljkePrvi = Controller.getInstance().getPredatePosiljkePoKvartalu(dp);
            tblDostavljanePosiljke.setModel(new DostavljanePosiljkeTableModel(dostavljanePosiljkePrvi));
            
            txtBrojPosiljki.setText("" + dostavljanePosiljkePrvi.size());
        } catch (Exception ex) {
            Logger.getLogger(PosiljkePoKvartalu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void populateTableSecondQuater() {
        try {
            DostavljanjePosiljke dp = new DostavljanjePosiljke();
            dp.setKvartal(TipPartition.april_maj_jun);
            dostavljanePosiljkeDrugi = Controller.getInstance().getPredatePosiljkePoKvartalu(dp);
            tblDostavljanePosiljke.setModel(new DostavljanePosiljkeTableModel(dostavljanePosiljkeDrugi));
            
            txtBrojPosiljki.setText("" + dostavljanePosiljkeDrugi.size());
        } catch (Exception ex) {
            Logger.getLogger(PosiljkePoKvartalu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void populateTableThirdQuater() {
        try {
            DostavljanjePosiljke dp = new DostavljanjePosiljke();
            dp.setKvartal(TipPartition.jul_avgust_septembar);
            dostavljanePosiljkeTreci = Controller.getInstance().getPredatePosiljkePoKvartalu(dp);
            tblDostavljanePosiljke.setModel(new DostavljanePosiljkeTableModel(dostavljanePosiljkeTreci));
            
            txtBrojPosiljki.setText("" + dostavljanePosiljkeTreci.size());
        } catch (Exception ex) {
            Logger.getLogger(PosiljkePoKvartalu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void populateTableFourthQuater() {
        try {
            DostavljanjePosiljke dp = new DostavljanjePosiljke();
            dp.setKvartal(TipPartition.oktobar_novembar_decembar);
            dostavljanePosiljkeCetvrti = Controller.getInstance().getPredatePosiljkePoKvartalu(dp);
            tblDostavljanePosiljke.setModel(new DostavljanePosiljkeTableModel(dostavljanePosiljkeCetvrti));
            
            txtBrojPosiljki.setText("" + dostavljanePosiljkeCetvrti.size());
        } catch (Exception ex) {
            Logger.getLogger(PosiljkePoKvartalu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
