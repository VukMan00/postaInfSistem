/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package dostavljanjeposiljke;

import controller.Controller;
import domain.Adresnica;
import domain.DostavljanjePosiljke;
import domain.DostavniSpisak;
import domain.PopisPosiljakaUSVreci;
import domain.PostanskiRadnik;
import java.io.IOException;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.stream.Collectors;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import placanje.IsplataPosiljke;
import session.LocalStorage;
import tableModels.DostavljanePosiljkeTableModel;
import tableModels.PosiljkaTableModel;
import tableModels.PrimljenePosiljkeTableModel;

/**
 *
 * @author Vuk
 */
public class DostavljanjePosiljkeKorisniku extends javax.swing.JDialog {

    /**
     * Creates new form DostavljanjePosiljke
     */
    private final LocalStorage localStorage = LocalStorage.getInstance();
    private final DostavniSpisak dostavniSpisak;
    private final PopisPosiljakaUSVreci vreca;
    private final PostanskiRadnik postar;
    private Adresnica posiljka;
    private DostavljanjePosiljke dostavljanaPosiljka;
    private List<Adresnica> posiljkeVrece;
    private List<DostavljanjePosiljke> dostavljanePosiljkeVrece;
    
    public DostavljanjePosiljkeKorisniku(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        posiljkeVrece = new ArrayList<>();
        dostavniSpisak = (DostavniSpisak) localStorage.getItemFromHashMap("dostavniSpisak");
        vreca = dostavniSpisak.getVreca();
        postar = (PostanskiRadnik) localStorage.getItemFromHashMap("postanski-radnik");
        setComponents();
        
        ListSelectionModel selectionModel = tblPosiljke.getSelectionModel();
        selectionModel.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        selectionModel.addListSelectionListener((ListSelectionEvent e) -> {
            if (!e.getValueIsAdjusting()) {
                posiljka = getSelectedPosiljka();
                if(posiljka!=null){
                    txtSifraAdresnice.setText(posiljka.getSifraAdresnice().toString());
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtOznakaDostavnogSpiska = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtPosta = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtObracunskiRadnik = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtVreca = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPosiljke = new javax.swing.JTable();
        lblDatumDostave = new javax.swing.JLabel();
        calendarDatumDostave = new com.toedter.calendar.JCalendar();
        lblPosiljka = new javax.swing.JLabel();
        txtSifraAdresnice = new javax.swing.JTextField();
        btnUnesiDatum = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDostavljanePosiljke = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        cbHour = new javax.swing.JComboBox<>();
        cbMinutes = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        cbSeconds = new javax.swing.JComboBox<>();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Arial", 3, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Dostavni spisak");

        jLabel2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel2.setText("Oznaka dostavnog spiska");

        txtOznakaDostavnogSpiska.setEditable(false);
        txtOznakaDostavnogSpiska.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel3.setText("Pošta");

        txtPosta.setEditable(false);
        txtPosta.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel4.setText("Obračunski radnik");

        txtObracunskiRadnik.setEditable(false);
        txtObracunskiRadnik.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Arial", 3, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel5.setText("Vreća");

        txtVreca.setEditable(false);
        txtVreca.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Arial", 3, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Popis pošiljaka vreće");

        tblPosiljke.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        tblPosiljke.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblPosiljke);

        lblDatumDostave.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        lblDatumDostave.setText("Datum dostave");

        lblPosiljka.setText("Pošiljka");

        txtSifraAdresnice.setEditable(false);
        txtSifraAdresnice.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        btnUnesiDatum.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnUnesiDatum.setText("Izvrši predaju");
        btnUnesiDatum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUnesiDatumActionPerformed(evt);
            }
        });

        tblDostavljanePosiljke.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblDostavljanePosiljke);

        jLabel7.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel7.setText("Vreme dostave");

        cbHour.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23" }));

        cbMinutes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText(":");

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText(":");

        cbSeconds.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtOznakaDostavnogSpiska, javax.swing.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE)
                                    .addComponent(txtPosta)
                                    .addComponent(txtObracunskiRadnik)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtVreca, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(lblDatumDostave, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                                            .addComponent(lblPosiljka, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtSifraAdresnice, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(calendarDatumDostave, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(cbHour, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(cbMinutes, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(cbSeconds, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnUnesiDatum, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(83, 83, 83)))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 678, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtOznakaDostavnogSpiska, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtPosta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtObracunskiRadnik, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtVreca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPosiljka)
                            .addComponent(txtSifraAdresnice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblDatumDostave)
                            .addComponent(calendarDatumDostave, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(cbHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbMinutes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(cbSeconds, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(btnUnesiDatum, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(27, 27, 27)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnUnesiDatumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUnesiDatumActionPerformed
        // TODO add your handling code here:
        LocalDate datumDostave = calendarDatumDostave.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        Integer sati = Integer.parseInt((String)cbHour.getSelectedItem());
        Integer minuti = Integer.parseInt((String)cbMinutes.getSelectedItem());
        Integer sekunde = Integer.parseInt((String)cbSeconds.getSelectedItem());
        LocalDateTime vremeDostave = LocalDateTime.of(datumDostave.getYear(),datumDostave.getMonth().getValue(),datumDostave.getDayOfMonth(), sati, minuti, sekunde);
        if(checkPosiljka()){
            String messageException;
            try {
                dostavljanaPosiljka = new DostavljanjePosiljke(postar, posiljka.getPrimalac(), posiljka, datumDostave, vremeDostave);
                billingAndPayment();
                messageException = Controller.getInstance().addDostavljanjePosiljke(dostavljanaPosiljka);
                if(messageException==null){
                    JOptionPane.showMessageDialog(this, "Upesno ste predali pošiljku korisniku: " + posiljka.getPrimalac().getImePrezime());
                    populateTableDostavljanjePosiljke();
                }else{
                    JOptionPane.showMessageDialog(null, messageException, "Exception", JOptionPane.PLAIN_MESSAGE);
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage(), "Exception", JOptionPane.PLAIN_MESSAGE);
            }
        }
        else{
            JOptionPane.showMessageDialog(this, "Pošiljka je već predata korisniku: " + posiljka.getPrimalac().getImePrezime());
        }
    }//GEN-LAST:event_btnUnesiDatumActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnUnesiDatum;
    private com.toedter.calendar.JCalendar calendarDatumDostave;
    private javax.swing.JComboBox<String> cbHour;
    private javax.swing.JComboBox<String> cbMinutes;
    private javax.swing.JComboBox<String> cbSeconds;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblDatumDostave;
    private javax.swing.JLabel lblPosiljka;
    private javax.swing.JTable tblDostavljanePosiljke;
    private javax.swing.JTable tblPosiljke;
    private javax.swing.JTextField txtObracunskiRadnik;
    private javax.swing.JTextField txtOznakaDostavnogSpiska;
    private javax.swing.JTextField txtPosta;
    private javax.swing.JTextField txtSifraAdresnice;
    private javax.swing.JTextField txtVreca;
    // End of variables declaration//GEN-END:variables

    
    
    private void setComponents() {
        txtOznakaDostavnogSpiska.setText(dostavniSpisak.getOznakaDostavnogSpiska().toString());
        txtPosta.setText(dostavniSpisak.getPosta().toString());
        txtObracunskiRadnik.setText(dostavniSpisak.getObracunskiRadnik().toString());
        txtVreca.setText(vreca.toString());
        
        populateTablePosiljke();
        populateTableDostavljanjePosiljke();
    }

    private void populateTablePosiljke() {
        try {
            Adresnica adresnica = new Adresnica();
            adresnica.setVreca(vreca);
            posiljkeVrece = Controller.getInstance().getPosiljkeVrece(adresnica);
            tblPosiljke.setModel(new PosiljkaTableModel(posiljkeVrece));
        } catch (Exception ex) {
            Logger.getLogger(DostavljanjePosiljkeKorisniku.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void populateTableDostavljanjePosiljke() {
        try {
            List<DostavljanjePosiljke> dostavljanePosiljke = Controller.getInstance().getPrimljenePosiljke(new DostavljanjePosiljke());
            if(dostavljanePosiljke != null){
                dostavljanePosiljkeVrece = dostavljanePosiljke.stream()
                        .filter(dp -> dp.getPosiljka().getVreca().equals(vreca))
                        .collect(Collectors.toList());
                tblDostavljanePosiljke.setModel(new DostavljanePosiljkeTableModel(dostavljanePosiljkeVrece));
            }else{
                tblDostavljanePosiljke.setModel(new DostavljanePosiljkeTableModel(new ArrayList<>()));
            }    
        } catch (Exception ex) {
            Logger.getLogger(DostavljanjePosiljkeKorisniku.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private Adresnica getSelectedPosiljka() {
        int selectedRow = tblPosiljke.getSelectedRow();
        if(selectedRow == -1){
            JOptionPane.showMessageDialog(this, "Niste izabrali pošiljku");
            return null;
        }else{
            List<Adresnica> posiljke = ((PosiljkaTableModel) tblPosiljke.getModel()).getPosiljke();
            return posiljke.get(selectedRow);
        }
    }

    private boolean checkPosiljka() {
        List<DostavljanjePosiljke> dostavljanePosiljke = dostavljanePosiljkeVrece.stream()
                                                                    .filter(dp -> dp.getPosiljka().equals(posiljka))
                                                                    .collect(Collectors.toList());
        return dostavljanePosiljke.isEmpty();
    }

    private void billingAndPayment() {
        localStorage.addItemsInHashMap("posiljka", posiljka);
        localStorage.addItemsInHashMap("datumUplate", calendarDatumDostave.getDate().toInstant().atZone(ZoneId.systemDefault()).toLocalDate());
        IsplataPosiljke ip = new IsplataPosiljke(null, true);
        ip.setLocationRelativeTo(null);
        ip.setVisible(true);
        localStorage.removeItemFromHashMap("datumUplate");
        localStorage.removeItemFromHashMap("posiljka");
    }
}
