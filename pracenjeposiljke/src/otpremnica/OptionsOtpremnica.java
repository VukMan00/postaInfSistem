/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package otpremnica;

import controller.Controller;
import domain.Adresnica;
import domain.DostavljanjePosiljke;
import domain.DostavniSpisak;
import domain.Otpremnica;
import domain.Posta;
import domain.PostanskiRadnik;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.stream.Collectors;
import javax.swing.JOptionPane;
import postanskiradnik.ObracunskiRadnik;
import postanskiradnik.Postar;
import session.LocalStorage;
import tableModels.DostavljanePosiljkeTableModel;
import tableModels.PrimljenePosiljkeTableModel;

/**
 *
 * @author Vuk
 */
public class OptionsOtpremnica extends javax.swing.JDialog {

    /**
     * Creates new form OperationOtpremnica
     */
    private final LocalStorage localStorage = LocalStorage.getInstance();
    private final DostavniSpisak dostavniSpisak;
    private final Posta posta;
    private final PostanskiRadnik obracunskiRadnik;
    private final PostanskiRadnik postar;
    private List<DostavljanjePosiljke> dostavljanePosiljkeVrece;
    private List<Otpremnica> otpremnice;
    
    public OptionsOtpremnica(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        dostavljanePosiljkeVrece = new ArrayList<>();
        dostavniSpisak = (DostavniSpisak) localStorage.getItemFromHashMap("dostavniSpisak");
        obracunskiRadnik = (PostanskiRadnik) localStorage.getItemFromHashMap("postanski-radnik");
        postar = dostavniSpisak.getPostar();
        posta = postar.getPosta();
        setComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lbOznakaDostavnogSpiska = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtOznakaVrece = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtPostar = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtPosta = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPrimljenePosiljkeVrece = new javax.swing.JTable();
        btnCreateOtpremnica = new javax.swing.JButton();
        btnUpdateOtpremnica = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Arial", 3, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Dostavni Spisak");

        lbOznakaDostavnogSpiska.setFont(new java.awt.Font("Arial", 3, 14)); // NOI18N
        lbOznakaDostavnogSpiska.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbOznakaDostavnogSpiska.setText("jLabel2");

        jLabel3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel3.setText("Vreća");

        txtOznakaVrece.setEditable(false);
        txtOznakaVrece.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel2.setText("Poštar");

        txtPostar.setEditable(false);
        txtPostar.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel4.setText("Pošta");

        txtPosta.setEditable(false);

        jLabel5.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel5.setText("Isporučene pošiljke vreće:");

        tblPrimljenePosiljkeVrece.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblPrimljenePosiljkeVrece);

        btnCreateOtpremnica.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnCreateOtpremnica.setText("Kreiraj optremnicu");
        btnCreateOtpremnica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateOtpremnicaActionPerformed(evt);
            }
        });

        btnUpdateOtpremnica.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnUpdateOtpremnica.setText("Ažuriraj otpremnicu");
        btnUpdateOtpremnica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateOtpremnicaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbOznakaDostavnogSpiska, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txtPostar, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txtOznakaVrece, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txtPosta)))
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(btnCreateOtpremnica, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(btnUpdateOtpremnica, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(52, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbOznakaDostavnogSpiska)
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtPosta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtPostar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtOznakaVrece, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnUpdateOtpremnica, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                    .addComponent(btnCreateOtpremnica, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateOtpremnicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateOtpremnicaActionPerformed
        // TODO add your handling code here:
        DostavljanjePosiljke posiljka = getSelectedPosiljka();
        if(posiljka!=null){
            if(existedOtpremnica(posiljka).isEmpty()){
                localStorage.addItemsInHashMap("posiljka", posiljka);
                localStorage.addItemsInHashMap("operation", "CREATE");
                SaveOtpremnica co = new SaveOtpremnica(null, true);
                co.setLocationRelativeTo(null);
                co.setVisible(true);
                localStorage.removeItemFromHashMap("posiljka");
                localStorage.removeItemFromHashMap("operation");
                populateTable();
            }else{
                JOptionPane.showMessageDialog(this, "Vec je kreirana otpremnica za ovu pošiljku"); 
            }
        }
    }//GEN-LAST:event_btnCreateOtpremnicaActionPerformed

    private void btnUpdateOtpremnicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateOtpremnicaActionPerformed
        // TODO add your handling code here:
        DostavljanjePosiljke posiljka = getSelectedPosiljka();
        if(posiljka!=null){
            List<Otpremnica> postojeceOtpremnice = existedOtpremnica(posiljka);
            if(!postojeceOtpremnice.isEmpty()){
                Otpremnica otpremnica = postojeceOtpremnice.get(0);
                localStorage.addItemsInHashMap("posiljka", posiljka);
                localStorage.addItemsInHashMap("otpremnica", otpremnica);
                localStorage.addItemsInHashMap("operation", "UPDATE");
                SaveOtpremnica so = new SaveOtpremnica(null, true);
                so.setLocationRelativeTo(null);
                so.setVisible(true);
                localStorage.removeItemFromHashMap("posiljka");
                localStorage.removeItemFromHashMap("otpremnica");
                localStorage.removeItemFromHashMap("operation");
                populateTable();
            }
            else{
                JOptionPane.showMessageDialog(this, "Otpremnica nije kreirana za ovu pošiljku");
            }
        }
    }//GEN-LAST:event_btnUpdateOtpremnicaActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreateOtpremnica;
    private javax.swing.JButton btnUpdateOtpremnica;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbOznakaDostavnogSpiska;
    private javax.swing.JTable tblPrimljenePosiljkeVrece;
    private javax.swing.JTextField txtOznakaVrece;
    private javax.swing.JTextField txtPosta;
    private javax.swing.JTextField txtPostar;
    // End of variables declaration//GEN-END:variables

    private void setComponents() {
      txtPostar.setText(postar.getImePrezime());
      lbOznakaDostavnogSpiska.setText(dostavniSpisak.getOznakaDostavnogSpiska().toString());
      txtPosta.setText(posta.getNaziv());
      txtOznakaVrece.setText(dostavniSpisak.getVreca().getOznakaVrece().toString());
      populateTable();
    }

    private void populateTable() {
        try {
            otpremnice = Controller.getInstance().getOtpremnice(new Otpremnica());
            List<DostavljanjePosiljke> dostavljanePosiljke = Controller.getInstance().getPrimljenePosiljke(new DostavljanjePosiljke());
            dostavljanePosiljkeVrece = dostavljanePosiljke.stream()
                                        .filter(dp -> dp.getPosiljka().getVreca().equals(dostavniSpisak.getVreca()))
                                        .collect(Collectors.toList());
            tblPrimljenePosiljkeVrece.setModel(new DostavljanePosiljkeTableModel(dostavljanePosiljkeVrece));
        } catch (Exception ex) {
            Logger.getLogger(OptionsOtpremnica.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private DostavljanjePosiljke getSelectedPosiljka() {
        int selectedRow = tblPrimljenePosiljkeVrece.getSelectedRow();
        if(selectedRow == -1){
            JOptionPane.showMessageDialog(this, "Niste izabrali dostavljenu pošiljku");
            return null;
        }else{
            List<DostavljanjePosiljke> dostavljanePosiljke = ((DostavljanePosiljkeTableModel) tblPrimljenePosiljkeVrece.getModel()).getPosiljke();
            return dostavljanePosiljke.get(selectedRow);
        }
    }

    private List<Otpremnica> existedOtpremnica(DostavljanjePosiljke dostavljenaPosiljka) {
       List<Otpremnica> postojeceOtpremnice = otpremnice.stream()
                                                    .filter(otp -> otp.getPosiljka().equals(dostavljenaPosiljka.getPosiljka()))
                                                    .collect(Collectors.toList());
       return postojeceOtpremnice;
    }
}
