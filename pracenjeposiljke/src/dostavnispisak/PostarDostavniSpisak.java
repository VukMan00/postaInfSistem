/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package dostavnispisak;

import controller.Controller;
import domain.DostavljanjePosiljke;
import domain.DostavniSpisak;
import domain.PostanskiRadnik;
import dostavljanjeposiljke.DostavljanjePosiljkeKorisniku;
import dostavljanjeposiljke.PredajaNovca;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.stream.Collectors;
import javax.swing.JOptionPane;
import postanskiradnik.Postar;
import session.LocalStorage;
import tableModels.PostarDostavniSpisakTableModel;

/**
 *
 * @author Vuk
 */
public class PostarDostavniSpisak extends javax.swing.JDialog {

    /**
     * Creates new form PostarDostavniSpisak
     */
    private LocalStorage localStorage = LocalStorage.getInstance();
    private List<DostavniSpisak> dostavniSpisakPostar;
    private PostanskiRadnik postar;
    
    public PostarDostavniSpisak(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        dostavniSpisakPostar = new ArrayList<>();
        postar = (PostanskiRadnik) localStorage.getItemFromHashMap("postanski-radnik");
        setComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblDostavniSpisak = new javax.swing.JTable();
        btnGivePosiljke = new javax.swing.JButton();
        btnPredajaNovca = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tblDostavniSpisak.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblDostavniSpisak);

        btnGivePosiljke.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnGivePosiljke.setText("Predaj po≈°iljke");
        btnGivePosiljke.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGivePosiljkeActionPerformed(evt);
            }
        });

        btnPredajaNovca.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnPredajaNovca.setText("Predaj novac");
        btnPredajaNovca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPredajaNovcaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 484, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnGivePosiljke)
                        .addGap(56, 56, 56)
                        .addComponent(btnPredajaNovca, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(106, 106, 106))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGivePosiljke)
                    .addComponent(btnPredajaNovca))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGivePosiljkeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGivePosiljkeActionPerformed
        // TODO add your handling code here:
        DostavniSpisak dostavniSpisak = getSelectedDostavniSpisak();
        if(dostavniSpisak!=null){
            localStorage.addItemsInHashMap("dostavniSpisak", dostavniSpisak);
            DostavljanjePosiljkeKorisniku dp = new DostavljanjePosiljkeKorisniku(null, true);
            dp.setLocationRelativeTo(null);
            dp.setVisible(true);
            localStorage.removeItemFromHashMap("dostavniSpisak");
        }
    }//GEN-LAST:event_btnGivePosiljkeActionPerformed

    private void btnPredajaNovcaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPredajaNovcaActionPerformed
        // TODO add your handling code here:
        DostavniSpisak dostavniSpisak = getSelectedDostavniSpisak();
        if(dostavniSpisak!=null){
            localStorage.addItemsInHashMap("dostavniSpisak", dostavniSpisak);
            PredajaNovca predajaNovca = new PredajaNovca(null, true);
            predajaNovca.setLocationRelativeTo(null);
            predajaNovca.setVisible(true);
            localStorage.removeItemFromHashMap("dostavniSpisak");
        }
    }//GEN-LAST:event_btnPredajaNovcaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGivePosiljke;
    private javax.swing.JButton btnPredajaNovca;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblDostavniSpisak;
    // End of variables declaration//GEN-END:variables

    private void setComponents() {
        populateTable();
    }

    private void populateTable() {
        try {
            List<DostavniSpisak> spiskovi = Controller.getInstance().getDostavneSpiskove(new DostavniSpisak());
            dostavniSpisakPostar = spiskovi.stream()
                                           .filter(spisak->spisak.getPostar().equals(postar))
                                           .collect(Collectors.toList());
            tblDostavniSpisak.setModel(new PostarDostavniSpisakTableModel(dostavniSpisakPostar));
        } catch (Exception ex) {
            Logger.getLogger(PostarDostavniSpisak.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private DostavniSpisak getSelectedDostavniSpisak() {
        int selectedRow = tblDostavniSpisak.getSelectedRow();
        if(selectedRow == -1){
            JOptionPane.showMessageDialog(this, "Niste izabrali spisak");
            return null;
        }else{
            List<DostavniSpisak> spiskovi = ((PostarDostavniSpisakTableModel) tblDostavniSpisak.getModel()).getDostavniSpiskovi();
            return spiskovi.get(selectedRow);
        }
    }
}
